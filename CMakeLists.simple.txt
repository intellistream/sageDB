cmake_minimum_required(VERSION 3.12)
project(sage_db VERSION 1.0.0 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Build options
option(BUILD_TESTS "Build test programs" OFF)
option(BUILD_PYTHON_BINDINGS "Build Python bindings" ON)
option(USE_OPENMP "Enable OpenMP support" OFF)

# 简化的 FAISS 检查，如果找不到就跳过
set(FAISS_FOUND FALSE)

# 尝试找到 Python (for pybind11)
if(BUILD_PYTHON_BINDINGS)
    find_package(Python3 COMPONENTS Interpreter Development REQUIRED)
    
    # 尝试找到 pybind11
    find_package(pybind11 QUIET)
    if(NOT pybind11_FOUND)
        # 如果找不到系统安装的 pybind11，尝试下载
        message(STATUS "pybind11 not found locally, downloading...")
        include(FetchContent)
        FetchContent_Declare(
            pybind11
            GIT_REPOSITORY https://github.com/pybind/pybind11
            GIT_TAG v2.13.0
        )
        FetchContent_MakeAvailable(pybind11)
    endif()
endif()

# Source files
set(SAGE_DB_SOURCES
    src/sage_db.cpp
    src/vector_store.cpp
    src/metadata_store.cpp
    src/query_engine.cpp
)

set(SAGE_DB_HEADERS
    include/sage_db/sage_db.h
    include/sage_db/vector_store.h
    include/sage_db/metadata_store.h
    include/sage_db/query_engine.h
    include/sage_db/common.h
)

# Create shared library
add_library(sage_db SHARED ${SAGE_DB_SOURCES})

# Include directories
target_include_directories(sage_db PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)

# 只在找到 FAISS 时才链接
if(FAISS_FOUND)
    target_include_directories(sage_db PRIVATE ${FAISS_INCLUDE_DIR})
    target_link_libraries(sage_db PRIVATE ${FAISS_LIBRARY})
    target_compile_definitions(sage_db PRIVATE FAISS_AVAILABLE)
else()
    message(STATUS "Building without FAISS support")
    target_compile_definitions(sage_db PRIVATE NO_FAISS)
endif()

# Compiler specific options
target_compile_options(sage_db PRIVATE
    $<$<CXX_COMPILER_ID:GNU>:-Wall -Wextra -O3>
    $<$<CXX_COMPILER_ID:Clang>:-Wall -Wextra -O3>
    $<$<CXX_COMPILER_ID:MSVC>:/W4 /O2>
)

# Python bindings
if(BUILD_PYTHON_BINDINGS)
    pybind11_add_module(_sage_db python/bindings.cpp)
    target_link_libraries(_sage_db PRIVATE sage_db)
    target_compile_definitions(_sage_db PRIVATE VERSION_INFO="${PROJECT_VERSION}")
    
    # 设置输出名称和位置
    set_target_properties(_sage_db PROPERTIES
        OUTPUT_NAME "_sage_db"
        PREFIX ""
    )
endif()

# Install rules
install(TARGETS sage_db
    EXPORT sage_db_targets
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
    RUNTIME DESTINATION bin
)

install(DIRECTORY include/ DESTINATION include)

if(BUILD_PYTHON_BINDINGS)
    install(TARGETS _sage_db DESTINATION .)
endif()
